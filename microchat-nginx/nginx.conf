worker_processes 1;

events {
    worker_connections 1024;
}

http {
    lua_shared_dict users 10m;

    upstream websocket_servers {
        hash $user_id consistent;

        server microchat-microchat-messaging-1:8080;
        server microchat-microchat-messaging-2:8080;
        server microchat-microchat-messaging-3:8080;
    }

    server {
        listen 80;
        server_name localhost;

        location /ws {
            set $user_id '';
            access_by_lua_block {
                local jwt = require "resty.jwt"
                local token = ngx.var.arg_token
                if token then
                    local jwt_obj = jwt:load_jwt(token)
                    ngx.var.user_id = jwt_obj.payload.sub
                else
                    return ngx.exit(ngx.HTTP_BAD_REQUEST)
                end
            }

            proxy_pass http://websocket_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        location / {
            return 404;
        }
    }
}
