version: '3.7'

services:
  microchat-configserver:
    build: ./microchat-configserver
    restart: always
    networks:
      - backend

  microchat-gateway:
    build: ./microchat-gatewayserver
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - microchat-configserver
    networks:
      - backend

  microchat-keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    command: ['start-dev', '--import-realm',
              '--db=postgres', '--db-url=jdbc:postgresql://microchat-keycloak-postgres:5432/microchat-keycloak',
              '--db-username=postgres', '--db-password=password']
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    restart: always
    depends_on:
      - microchat-keycloak-postgres
    networks:
      - backend
    ports:
      - "8081:8080"
    volumes:
      - ./microchat-keycloak/keycloak-import:/opt/keycloak/data/import

  microchat-keycloak-postgres:
    image: postgres
    environment:
      POSTGRES_DB: microchat-keycloak
      POSTGRES_PASSWORD: password
    restart: always
    networks:
      - backend
    ports:
      - "15432:5432"
    volumes:
      - ./microchat-keycloak/postgres-data:/var/lib/postgresql/data
    shm_size: 128mb

  microchat-eurekaserver:
    build: ./microchat-eurekaserver
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: always
    depends_on:
      - microchat-configserver
    networks:
      - backend
    ports:
      - "8082:8080"

  microchat-friend:
    build: ./microchat-friend
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    restart: always
    depends_on:
      - microchat-configserver
      - microchat-eurekaserver
      - microchat-friend-postgres
    networks:
      - backend
    deploy:
      replicas: 3

  microchat-friend-postgres:
    image: postgres
    environment:
      POSTGRES_DB: microchat-friend
      POSTGRES_PASSWORD: password
    restart: always
    ports:
      - "25432:5432"
    networks:
      - backend
    volumes:
      - ./microchat-friend-postgres/db.sql:/docker-entrypoint-initdb.d/db.sql
      - ./microchat-friend-postgres/postgres-data:/var/lib/postgresql/data
    shm_size: 128mb

  microchat-nginx:
    build: ./microchat-nginx
    restart: always
    depends_on:
      - microchat-messaging
    ports:
      - "80:80"
    networks:
      - backend
    volumes:
      - ./microchat-nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf

  microchat-messaging:
    build: ./microchat-messaging
    environment:
      - LOGGING_LEVEL_COM=debug
    restart: always
    depends_on:
      - microchat-configserver
      - microchat-eurekaserver
      - microchat-messaging-redis
    deploy:
      replicas: 3
      endpoint_mode: dnsrr
    networks:
      - backend

  microchat-messaging-redis:
    image: redis/redis-stack-server
    ports:
      - "6379:6379"
    networks:
      - backend

  controller-1:
    image: apache/kafka:latest
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - backend

  controller-2:
    image: apache/kafka:latest
    container_name: controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - backend

  controller-3:
    image: apache/kafka:latest
    container_name: controller-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - backend

  broker-1:
    image: apache/kafka:latest
    container_name: broker-1
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    networks:
      - backend

  broker-2:
    image: apache/kafka:latest
    container_name: broker-2
    ports:
      - 39092:9092
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    networks:
      - backend

  broker-3:
    image: apache/kafka:latest
    container_name: broker-3
    ports:
      - 49092:9092
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-3:19092,PLAINTEXT_HOST://localhost:49092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3
    networks:
      - backend

networks:
  backend:
    driver: bridge
